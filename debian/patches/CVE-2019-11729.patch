--- nss-stretch.git.orig/nss/lib/cryptohi/seckey.c
+++ nss-stretch.git/nss/lib/cryptohi/seckey.c
@@ -625,6 +625,11 @@
                     return pubk;
                 break;
             case SEC_OID_ANSIX962_EC_PUBLIC_KEY:
+                /* A basic sanity check on inputs. */
+                if (spki->algorithm.parameters.len == 0 || newOs.len == 0) {
+                    PORT_SetError(SEC_ERROR_INPUT_LEN);
+                    break;
+                }
                 pubk->keyType = ecKey;
                 pubk->u.ec.size = 0;
 
--- nss-stretch.git.orig/nss/lib/freebl/dh.c
+++ nss-stretch.git/nss/lib/freebl/dh.c
@@ -210,7 +210,8 @@
     unsigned int len = 0;
     unsigned int nb;
     unsigned char *secret = NULL;
-    if (!publicValue || !prime || !privateValue || !derivedSecret) {
+    if (!publicValue || !publicValue->len || !prime || !prime->len ||
+        !privateValue || !privateValue->len || !derivedSecret) {
 	PORT_SetError(SEC_ERROR_INVALID_ARGS);
 	return SECFailure;
     }
--- nss-stretch.git.orig/nss/lib/freebl/ec.c
+++ nss-stretch.git/nss/lib/freebl/ec.c
@@ -188,7 +188,8 @@
 #endif
     MP_DIGITS(&k) = 0;
 
-    if (!ecParams || !privKey || !privKeyBytes || (privKeyLen < 0)) {
+    if (!ecParams || ecParams->name == ECCurve_noName ||
+        !privKey || !privKeyBytes || privKeyLen <= 0) {
 	PORT_SetError(SEC_ERROR_INVALID_ARGS);
 	return SECFailure;
     }
@@ -368,7 +369,7 @@
     int len;
     unsigned char *privKeyBytes = NULL;
 
-    if (!ecParams) {
+    if (!ecParams || ecParams->name == ECCurve_noName || !privKey) {
 	PORT_SetError(SEC_ERROR_INVALID_ARGS);
 	return SECFailure;
     }
@@ -410,7 +411,8 @@
     mp_err err = MP_OKAY;
     int len;
 
-    if (!ecParams || !publicValue) {
+    if (!ecParams || ecParams->name == ECCurve_noName ||
+        !publicValue || !publicValue->len) {
 	PORT_SetError(SEC_ERROR_INVALID_ARGS);
 	return SECFailure;
     }
@@ -510,8 +512,9 @@
     int i;
 #endif
 
-    if (!publicValue || !ecParams || !privateValue || 
-	!derivedSecret) {
+    if (!publicValue || !publicValue->len ||
+        !ecParams || ecParams->name == ECCurve_noName ||
+        !privateValue || !privateValue->len || !derivedSecret) {
 	PORT_SetError(SEC_ERROR_INVALID_ARGS);
 	return SECFailure;
     }
--- nss-stretch.git.orig/nss/lib/util/quickder.c
+++ nss-stretch.git/nss/lib/util/quickder.c
@@ -872,6 +872,13 @@
 
                 case SEC_ASN1_BIT_STRING:
                     {
+                        /* Can't be 8 or more spare bits, or any spare bits
+                         * if there are no octets. */
+                        if (temp.data[0] >= 8 || (temp.data[0] > 0 && temp.len == 1)) {
+                            PORT_SetError(SEC_ERROR_BAD_DER);
+                            rv = SECFailure;
+                            break;
+                        }
                         /* change the length in the SECItem to be the number
                            of bits */
                         temp.len = (temp.len-1)*8 - (temp.data[0] & 0x7);
