# HG changeset patch
# User J.C. Jones <jjones@mozilla.com>
# Date 1547271196 25200
#      Fri Jan 11 22:33:16 2019 -0700
# Node ID 08d1b0c1117f7a9a5382440864e243ece0d1a7a3
# Parent  5e70b72131ac28457b14cdc6100e8674409bbdd4
Bug 1507174 - Add additional null checks to other CMS functions r=mt

Differential review: https://phabricator.services.mozilla.com//D16383

Origin: backport, https://hg.mozilla.org/projects/nss/rev/08d1b0c1117f
[rcs: Backported to jessie]
--- nss-jessie.git.orig/nss/lib/smime/cmscinfo.c
+++ nss-jessie.git/nss/lib/smime/cmscinfo.c
@@ -53,6 +53,10 @@
 {
     SECOidTag kind;
 
+    if (cinfo == NULL) {
+        return;
+    }
+
     kind = NSS_CMSContentInfo_GetContentTypeTag(cinfo);
     switch (kind) {
     case SEC_OID_PKCS7_ENVELOPED_DATA:
@@ -88,6 +92,11 @@
 NSS_CMSContentInfo_GetChildContentInfo(NSSCMSContentInfo *cinfo)
 {
     NSSCMSContentInfo * ccinfo  = NULL;
+
+    if (cinfo == NULL) {
+        return NULL;
+    }
+
     SECOidTag tag = NSS_CMSContentInfo_GetContentTypeTag(cinfo);
     switch (tag) {
     case SEC_OID_PKCS7_SIGNED_DATA:
@@ -146,15 +155,20 @@
 NSS_CMSContentInfo_SetContent(NSSCMSMessage *cmsg, NSSCMSContentInfo *cinfo, SECOidTag type, void *ptr)
 {
     SECStatus rv;
+    if (cinfo == NULL || cmsg == NULL) {
+        return SECFailure;
+    }
 
     cinfo->contentTypeTag = SECOID_FindOIDByTag(type);
-    if (cinfo->contentTypeTag == NULL)
+    if (cinfo->contentTypeTag == NULL) {
 	return SECFailure;
+    }
     
     /* do not copy the oid, just create a reference */
     rv = SECITEM_CopyItem (cmsg->poolp, &(cinfo->contentType), &(cinfo->contentTypeTag->oid));
-    if (rv != SECSuccess)
+    if (rv != SECSuccess) {
 	return SECFailure;
+    }
 
     cinfo->content.pointer = ptr;
 
@@ -185,8 +199,9 @@
 SECStatus
 NSS_CMSContentInfo_SetContent_Data(NSSCMSMessage *cmsg, NSSCMSContentInfo *cinfo, SECItem *data, PRBool detached)
 {
-    if (NSS_CMSContentInfo_SetContent(cmsg, cinfo, SEC_OID_PKCS7_DATA, (void *)data) != SECSuccess)
+    if (NSS_CMSContentInfo_SetContent(cmsg, cinfo, SEC_OID_PKCS7_DATA, (void *)data) != SECSuccess) {
 	return SECFailure;
+    }
     if (detached) {
         cinfo->rawContent = NULL;
     }
@@ -227,6 +242,10 @@
 void *
 NSS_CMSContentInfo_GetContent(NSSCMSContentInfo *cinfo)
 {
+    if (cinfo == NULL) {
+        return NULL;
+    }
+
     SECOidTag tag = cinfo->contentTypeTag 
 	                ? cinfo->contentTypeTag->offset 
 	                : SEC_OID_UNKNOWN;
@@ -255,6 +274,10 @@
     SECOidTag          tag;
     SECItem           *pItem = NULL;
 
+    if (cinfo == NULL) {
+        return NULL;
+    }
+
     tag = NSS_CMSContentInfo_GetContentTypeTag(cinfo);
     if (NSS_CMSType_IsData(tag)) {
 	pItem = cinfo->content.data; 
@@ -278,6 +301,10 @@
 SECOidTag
 NSS_CMSContentInfo_GetContentTypeTag(NSSCMSContentInfo *cinfo)
 {
+    if (cinfo == NULL) {
+        return SEC_OID_UNKNOWN;
+    }
+
     if (cinfo->contentTypeTag == NULL)
 	cinfo->contentTypeTag = SECOID_FindOID(&(cinfo->contentType));
 
@@ -290,11 +317,17 @@
 SECItem *
 NSS_CMSContentInfo_GetContentTypeOID(NSSCMSContentInfo *cinfo)
 {
-    if (cinfo->contentTypeTag == NULL)
+    if (cinfo == NULL) {
+        return NULL;
+    }
+
+    if (cinfo->contentTypeTag == NULL) {
 	cinfo->contentTypeTag = SECOID_FindOID(&(cinfo->contentType));
+    }
 
-    if (cinfo->contentTypeTag == NULL)
+    if (cinfo->contentTypeTag == NULL) {
 	return NULL;
+    }
 
     return &(cinfo->contentTypeTag->oid);
 }
@@ -306,8 +339,13 @@
 SECOidTag
 NSS_CMSContentInfo_GetContentEncAlgTag(NSSCMSContentInfo *cinfo)
 {
-    if (cinfo->contentEncAlgTag == SEC_OID_UNKNOWN)
+    if (cinfo == NULL) {
+        return SEC_OID_UNKNOWN;
+    }
+
+    if (cinfo->contentEncAlgTag == SEC_OID_UNKNOWN) {
 	cinfo->contentEncAlgTag = SECOID_GetAlgorithmTag(&(cinfo->contentEncAlg));
+    }
 
     return cinfo->contentEncAlgTag;
 }
@@ -318,6 +356,10 @@
 SECAlgorithmID *
 NSS_CMSContentInfo_GetContentEncAlg(NSSCMSContentInfo *cinfo)
 {
+    if (cinfo == NULL) {
+        return NULL;
+    }
+
     return &(cinfo->contentEncAlg);
 }
 
@@ -326,10 +368,14 @@
 				    SECOidTag bulkalgtag, SECItem *parameters, int keysize)
 {
     SECStatus rv;
+    if (cinfo == NULL) {
+        return SECFailure;
+    }
 
     rv = SECOID_SetAlgorithmID(poolp, &(cinfo->contentEncAlg), bulkalgtag, parameters);
-    if (rv != SECSuccess)
+    if (rv != SECSuccess) {
 	return SECFailure;
+    }
     cinfo->keysize = keysize;
     return SECSuccess;
 }
@@ -339,27 +385,42 @@
 				    SECAlgorithmID *algid, int keysize)
 {
     SECStatus rv;
+    if (cinfo == NULL) {
+        return SECFailure;
+    }
 
     rv = SECOID_CopyAlgorithmID(poolp, &(cinfo->contentEncAlg), algid);
-    if (rv != SECSuccess)
+    if (rv != SECSuccess) {
 	return SECFailure;
-    if (keysize >= 0)
+    }
+    if (keysize >= 0) {
 	cinfo->keysize = keysize;
+    }
     return SECSuccess;
 }
 
 void
 NSS_CMSContentInfo_SetBulkKey(NSSCMSContentInfo *cinfo, PK11SymKey *bulkkey)
 {
-    cinfo->bulkkey = PK11_ReferenceSymKey(bulkkey);
-    cinfo->keysize = PK11_GetKeyStrength(cinfo->bulkkey, &(cinfo->contentEncAlg));
+    if (cinfo == NULL) {
+        return;
+    }
+
+    if (bulkkey == NULL) {
+        cinfo->bulkkey = NULL;
+        cinfo->keysize = 0;
+    } else {
+        cinfo->bulkkey = PK11_ReferenceSymKey(bulkkey);
+        cinfo->keysize = PK11_GetKeyStrength(cinfo->bulkkey, &(cinfo->contentEncAlg));
+    }
 }
 
 PK11SymKey *
 NSS_CMSContentInfo_GetBulkKey(NSSCMSContentInfo *cinfo)
 {
-    if (cinfo->bulkkey == NULL)
+    if (cinfo == NULL || cinfo->bulkkey == NULL) {
 	return NULL;
+    }
 
     return PK11_ReferenceSymKey(cinfo->bulkkey);
 }
@@ -367,5 +428,9 @@
 int
 NSS_CMSContentInfo_GetBulkKeySize(NSSCMSContentInfo *cinfo)
 {
+    if (cinfo == NULL) {
+        return 0;
+    }
+
     return cinfo->keysize;
 }
--- nss-jessie.git.orig/nss/lib/smime/cmsdigdata.c
+++ nss-jessie.git/nss/lib/smime/cmsdigdata.c
@@ -56,7 +56,9 @@
 NSS_CMSDigestedData_Destroy(NSSCMSDigestedData *digd)
 {
     /* everything's in a pool, so don't worry about the storage */
-    NSS_CMSContentInfo_Destroy(&(digd->contentInfo));
+    if (digd != NULL) {
+        NSS_CMSContentInfo_Destroy(&(digd->contentInfo));
+    }
     return;
 }
 
--- nss-jessie.git.orig/nss/lib/smime/cmsencdata.c
+++ nss-jessie.git/nss/lib/smime/cmsencdata.c
@@ -86,7 +86,9 @@
 NSS_CMSEncryptedData_Destroy(NSSCMSEncryptedData *encd)
 {
     /* everything's in a pool, so don't worry about the storage */
-    NSS_CMSContentInfo_Destroy(&(encd->contentInfo));
+    if (encd != NULL) {
+        NSS_CMSContentInfo_Destroy(&(encd->contentInfo));
+    }
     return;
 }
 
--- nss-jessie.git.orig/nss/lib/smime/cmsenvdata.c
+++ nss-jessie.git/nss/lib/smime/cmsenvdata.c
@@ -144,6 +144,11 @@
     poolp = envd->cmsg->poolp;
     cinfo = &(envd->contentInfo);
 
+    if (cinfo == NULL) {
+        PORT_SetError(SEC_ERROR_BAD_DATA);
+        goto loser;
+    }
+
     recipientinfos = envd->recipientInfos;
     if (recipientinfos == NULL) {
 	PORT_SetError(SEC_ERROR_BAD_DATA);
--- nss-jessie.git.orig/nss/lib/smime/cmsmessage.c
+++ nss-jessie.git/nss/lib/smime/cmsmessage.c
@@ -95,6 +95,9 @@
 void
 NSS_CMSMessage_Destroy(NSSCMSMessage *cmsg)
 {
+    if (cmsg == NULL)
+        return;
+
     PORT_Assert (cmsg->refCount > 0);
     if (cmsg->refCount <= 0) {	/* oops */
 	return;
--- nss-jessie.git.orig/nss/lib/smime/cmsudf.c
+++ nss-jessie.git/nss/lib/smime/cmsudf.c
@@ -240,7 +240,7 @@
 {
     const nsscmstypeInfo *typeInfo = nss_cmstype_lookup(type);
 
-    if (typeInfo && typeInfo->destroy) {
+    if (typeInfo && (typeInfo->destroy) && (gd != NULL)) {
 	(*typeInfo->destroy)(gd);
     }
     
